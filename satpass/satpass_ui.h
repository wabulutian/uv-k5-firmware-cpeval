#ifndef __SATPASS_UI_H__
#define __SATPASS_UI_H__

#include "external/printf/printf.h"
#include "satpass_def.h"
#include "driver/st7565.h"
#include "driver/bk4819.h"
#include "ui/helper.h"
#include "radio.h"
// LCD has poor resolution, 2 deg/step is enough
static float sinLUT2deg[180] = {0.000000f, 0.034899f, 0.069756f, 0.104528f, 0.139173f, 0.173648f, 0.207912f, 0.241922f, 0.275637f, 0.309017f, 0.342020f, 0.374607f, 0.406737f, 0.438371f, 0.469472f, 0.500000f, 0.529919f, 0.559193f, 0.587785f, 0.615661f, 0.642788f, 0.669131f, 0.694658f, 0.719340f, 0.743145f, 0.766044f, 0.788011f, 0.809017f, 0.829038f, 0.848048f, 0.866025f,
0.882948f, 0.898794f, 0.913545f, 0.927184f, 0.939693f, 0.951057f, 0.961262f, 0.970296f, 0.978148f, 0.984808f, 0.990268f, 0.994522f, 0.997564f, 0.999391f, 1.000000f, 0.999391f, 0.997564f, 0.994522f, 0.990268f, 0.984808f, 0.978148f, 0.970296f, 0.961262f, 0.951057f, 0.939693f, 0.927184f, 0.913545f, 0.898794f, 0.882948f, 0.866025f,
0.848048f, 0.829038f, 0.809017f, 0.788011f, 0.766044f, 0.743145f, 0.719340f, 0.694658f, 0.669131f, 0.642788f, 0.615661f, 0.587785f, 0.559193f, 0.529919f, 0.500000f, 0.469472f, 0.438371f, 0.406737f, 0.374607f, 0.342020f, 0.309017f, 0.275637f, 0.241922f, 0.207912f, 0.173648f, 0.139173f, 0.104528f, 0.069756f, 0.034899f, 0.000000f,
-0.034899f, -0.069756f, -0.104528f, -0.139173f, -0.173648f, -0.207912f, -0.241922f, -0.275637f, -0.309017f, -0.342020f, -0.374607f, -0.406737f, -0.438371f, -0.469472f, -0.500000f, -0.529919f, -0.559193f, -0.587785f, -0.615661f, -0.642788f, -0.669131f, -0.694658f, -0.719340f, -0.743145f, -0.766044f, -0.788011f, -0.809017f, -0.829038f, -0.848048f, -0.866025f,
-0.882948f, -0.898794f, -0.913545f, -0.927184f, -0.939693f, -0.951057f, -0.961262f, -0.970296f, -0.978148f, -0.984808f, -0.990268f, -0.994522f, -0.997564f, -0.999391f, -1.000000f, -0.999391f, -0.997564f, -0.994522f, -0.990268f, -0.984808f, -0.978148f, -0.970296f, -0.961262f, -0.951057f, -0.939693f, -0.927184f, -0.913545f, -0.898794f, -0.882948f, -0.866025f,
-0.848048f, -0.829038f, -0.809017f, -0.788011f, -0.766044f, -0.743145f, -0.719340f, -0.694658f, -0.669131f, -0.642788f, -0.615661f, -0.587785f, -0.559193f, -0.529919f, -0.500000f, -0.469472f, -0.438371f, -0.406737f, -0.374607f, -0.342020f, -0.309017f, -0.275637f, -0.241922f, -0.207912f, -0.173648f, -0.139173f, -0.104528f, -0.069756f, -0.034899f};

static float cosLUT2deg[180] = 
{1.000000f, 0.999391f, 0.997564f, 0.994522f, 0.990268f, 0.984808f, 0.978148f, 0.970296f, 0.961262f, 0.951057f, 0.939693f, 0.927184f, 0.913545f, 0.898794f, 0.882948f, 0.866025f, 0.848048f, 0.829038f, 0.809017f, 0.788011f, 0.766044f, 0.743145f, 0.719340f, 0.694658f, 0.669131f, 0.642788f, 0.615661f, 0.587785f, 0.559193f, 0.529919f, 0.500000f,
0.469472f, 0.438371f, 0.406737f, 0.374607f, 0.342020f, 0.309017f, 0.275637f, 0.241922f, 0.207912f, 0.173648f, 0.139173f, 0.104528f, 0.069756f, 0.034899f, 0.000000f, -0.034899f, -0.069756f, -0.104528f, -0.139173f, -0.173648f, -0.207912f, -0.241922f, -0.275637f, -0.309017f, -0.342020f, -0.374607f, -0.406737f, -0.438371f, -0.469472f, -0.500000f,
-0.529919f, -0.559193f, -0.587785f, -0.615661f, -0.642788f, -0.669131f, -0.694658f, -0.719340f, -0.743145f, -0.766044f, -0.788011f, -0.809017f, -0.829038f, -0.848048f, -0.866025f, -0.882948f, -0.898794f, -0.913545f, -0.927184f, -0.939693f, -0.951057f, -0.961262f, -0.970296f, -0.978148f, -0.984808f, -0.990268f, -0.994522f, -0.997564f, -0.999391f, -1.000000f,
-0.999391f, -0.997564f, -0.994522f, -0.990268f, -0.984808f, -0.978148f, -0.970296f, -0.961262f, -0.951057f, -0.939693f, -0.927184f, -0.913545f, -0.898794f, -0.882948f, -0.866025f, -0.848048f, -0.829038f, -0.809017f, -0.788011f, -0.766044f, -0.743145f, -0.719340f, -0.694658f, -0.669131f, -0.642788f, -0.615661f, -0.587785f, -0.559193f, -0.529919f, -0.500000f,
-0.469472f, -0.438371f, -0.406737f, -0.374607f, -0.342020f, -0.309017f, -0.275637f, -0.241922f, -0.207912f, -0.173648f, -0.139173f, -0.104528f, -0.069756f, -0.034899f, -0.000000f, 0.034899f, 0.069756f, 0.104528f, 0.139173f, 0.173648f, 0.207912f, 0.241922f, 0.275637f, 0.309017f, 0.342020f, 0.374607f, 0.406737f, 0.438371f, 0.469472f, 0.500000f,
0.529919f, 0.559193f, 0.587785f, 0.615661f, 0.642788f, 0.669131f, 0.694658f, 0.719340f, 0.743145f, 0.766044f, 0.788011f, 0.809017f, 0.829038f, 0.848048f, 0.866025f, 0.882948f, 0.898794f, 0.913545f, 0.927184f, 0.939693f, 0.951057f, 0.961262f, 0.970296f, 0.978148f, 0.984808f, 0.990268f, 0.994522f, 0.997564f, 0.999391f};


#define QUICKMENU_CELL_WIDTH		40
#define RADAR_CENTER_X				100
#define RADAR_CENTER_Y				38	
#define RSSI_METER_PAD_LEFT			45
void Satpass_UI_DrawLine(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, bool fill);
void Satpass_UI_DrawCircle(int centerx, int centery, int radius);
void Satpass_UI_DrawEmptyRadar();
void Satpass_UI_DrawRadar(st_PassInfo pass, uint16_t progress);
void Satpass_UI_DrawFrequency(uint32_t rx10hz, uint32_t tx10hz, enum_FreqChannel channel, bool isFreqInputMode, char* p_freqInputString, bool isTx);
void Satpass_UI_DrawQuickMenu(char* item1, char* item2, char* item3, uint8_t sel, bool enable);
void Satpass_UI_DrawRssi(int dbm, uint8_t s, double enable);
void Satpass_UI_DrawChannelIcon(enum_FreqChannel currentChannel);
void Satpass_UI_DrawDateTime(st_Time time);
void Satpass_UI_DrawStatusBar(ModulationType modulation, BK4819_FilterBandwidth_t bw, uint8_t battLevel);

#endif